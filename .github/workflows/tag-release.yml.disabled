name: Tagged Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v ./...
        continue-on-error: true

  build-and-release:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build multi-platform binaries
        run: |
          mkdir -p dist
          
          # Linux amd64
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o dist/boba-linux-amd64 .
          
          # Linux arm64
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o dist/boba-linux-arm64 .
          
          # macOS amd64
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o dist/boba-darwin-amd64 .
          
          # macOS arm64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o dist/boba-darwin-arm64 .
          
          # Windows amd64
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.Version=${{ steps.version.outputs.version }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o dist/boba-windows-amd64.exe .

      - name: Create archives
        run: |
          cd dist
          
          # Create tar.gz for Unix systems
          tar -czf boba-linux-amd64.tar.gz boba-linux-amd64
          tar -czf boba-linux-arm64.tar.gz boba-linux-arm64
          tar -czf boba-darwin-amd64.tar.gz boba-darwin-amd64
          tar -czf boba-darwin-arm64.tar.gz boba-darwin-arm64
          
          # Create zip for Windows
          zip boba-windows-amd64.zip boba-windows-amd64.exe
          
          # Generate checksums
          sha256sum *.tar.gz *.zip > checksums.txt

      - name: Generate release notes
        id: release_notes
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Create release notes
          cat > release_notes.md << EOF
          ## 🎉 BOBA ${{ steps.version.outputs.version }}
          
          A development environment setup tool built with Kiro IDE.
          
          ### 📦 Installation
          
          #### Linux (amd64)
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/boba-linux-amd64.tar.gz
          tar -xzf boba-linux-amd64.tar.gz
          sudo mv boba-linux-amd64 /usr/local/bin/boba
          chmod +x /usr/local/bin/boba
          \`\`\`
          
          #### Linux (arm64)
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/boba-linux-arm64.tar.gz
          tar -xzf boba-linux-arm64.tar.gz
          sudo mv boba-linux-arm64 /usr/local/bin/boba
          chmod +x /usr/local/bin/boba
          \`\`\`
          
          #### macOS (Intel)
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/boba-darwin-amd64.tar.gz
          tar -xzf boba-darwin-amd64.tar.gz
          sudo mv boba-darwin-amd64 /usr/local/bin/boba
          chmod +x /usr/local/bin/boba
          \`\`\`
          
          #### macOS (Apple Silicon)
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/boba-darwin-arm64.tar.gz
          tar -xzf boba-darwin-arm64.tar.gz
          sudo mv boba-darwin-arm64 /usr/local/bin/boba
          chmod +x /usr/local/bin/boba
          \`\`\`
          
          #### Windows
          Download \`boba-windows-amd64.zip\`, extract it, and add the directory to your PATH.
          
          ### 📝 What's Changed
          
          $COMMITS
          
          ### 🔐 Checksums
          
          See \`checksums.txt\` for SHA256 checksums of all release artifacts.
          
          ### 🚀 Usage
          
          After installation, run:
          \`\`\`bash
          boba --version
          boba --help
          boba
          \`\`\`
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREVIOUS_TAG}...${{ steps.version.outputs.version }}
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
